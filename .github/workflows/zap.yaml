name: ZAP Scan (PR)
run-name: ${{ github.actor }} is performing a DAST scan using ZAP ðŸš€

# Trigger this workflow when a pull request is opened or updated with new commits
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]  # opened = new PR; synchronize = push to existing PR
        
jobs:
  zap_scan:
    runs-on: self-hosted

    steps:

      - name: Create Docker network
        run: docker network create zapnet

      - name: Start web app using docker
        run: |
          docker run -d --name juice-shop --network zapnet -p 127.0.0.1:3000:3000 bkimminich/juice-shop
          echo "Waiting for Juice Shop..."
          until curl -sSf http://localhost:3000; do sleep 5; done

      - name: Start ZAP server
        run: |
          docker run -d --name zap --network zapnet \
            -p 8090:8090 \
            zaproxy/zap-stable \
            zap.sh -daemon -port 8090 -host 0.0.0.0 \
              -config api.addrs.addr.name=.* \
              -config api.addrs.addr.regex=true \
              -config api.key=${{ secrets.ZAP_API_KEY }}

      - name: Wait for ZAP to start
        run: |
          echo "Waiting for ZAP..."
          until curl -s http://localhost:8090; do sleep 5; done

      - name: Checkout repository
        uses: actions/checkout@v4

      # Create a place holder report file. Replace this with your actual scan output.
      - name: Create a sample file
        run: echo "This is a test file." > security_report.txt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run ZAP Security Scan
        run: python3 basic-scan.py
        env:
          ZAP_API_KEY: ${{ secrets.ZAP_API_KEY }}
          ZAP_PATH: ${{ secrets.ZAP_PATH }}
          ZAP_PORT: 8090
          # TARGET_URL: http://localhost:3000/
          TARGET_URL: http://juice-shop:3000
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ZAP_HOST: http://localhost
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security_report.txt

      - name: Terminate web app
        if: always()
        run: docker rm -f juice-shop

      - name: Stop ZAP
        if: always()
        run: docker rm -f zap

      - name: Remove Docker network
        if: always()
        run: docker network rm zapnet